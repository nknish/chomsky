#!/usr/bin/env python3

import sys
from random import choice

colors = ['\033[94m', '\033[95m', '\033[91m', '\033[1m', '\033[92m']
end_color = '\033[0m'
share_path = '/usr/local/share/chomsky/words'
version = '2.0.2'


class ChomskyArgs:
	def __init__(self):
		self.color = False
		self.yes = False
		self.quantity = 1


def usage_error():
	print('error! invalid argument(s)')
	get_help()


def get_help():
	usage = 'usage: chomsky [--color] [--yes] [quantity]'
	print(usage)
	exit()


def give_verbose():
	print('chomsky is ALWAYS verbose')
	exit()


def get_version():
	print(f'chomsky version {version}')
	exit()


def process_word_files():
	parts = ["noun", "verb", "adjective", "adverb"]
	words = {"noun": [], "verb": [], "adjective": [], "adverb": []}
	for part in parts:
		for i in (1, 2, 3, 4):
			f = open(f"{share_path}/{part}s/{i}syllable{part}s.txt", "r")
			current_words = f.read().strip().split("\n")
			for word in current_words:
				words[part].append(word)
	return words


def parse_args(args):
	args.pop(0)

	ret = ChomskyArgs()

	# no args
	if not args:
		return ret
	
	# single special arg
	if len(args) == 1:
		arg = args[0]
		if arg[:2] == '--':
			if arg == '--help' or arg == '--usage':
				get_help()
			elif arg == '--verbose':
				give_verbose()
			elif arg == '--version':
				get_version()
		elif arg[0] == '-' and len(arg) == 2:
			if arg == '-h' or arg == '-H':
				get_help()
			elif arg == '-v':
				give_verbose()
			elif arg == '-V':
				get_version()

	# optional integer arg
	try:
		ret.quantity = int(args[-1])
		if ret.quantity < 0:
			usage_error()
		args.pop()
	except ValueError:
		ret.quantity = 1

	# ordinary optional flags
	while args:
		arg = args.pop()
		if arg[:2] == '--':
			if arg == '--color':
				ret.color = True
			elif arg == '--yes':
				ret.yes = True
			else:
				usage_error()
		elif arg[0] == '-' and len(arg) > 1:
			for flag in arg[1:]:
				if flag == 'c':
					ret.color = True
				elif flag == 'y':
					ret.yes = True
				else:
					usage_error()
		else:
			usage_error()
	
	return ret
	

def get_chomsky_sentence(words, is_color):
	s = ""
	parts = ["adjective", "adjective", "noun", "verb", "adverb"]
	for i in range(len(parts)):
		part = parts[i]
		word = choice(words[part])
		if is_color:
			s += colors[i]
		if part == "verb":
			while word[-3:] == "ing" or word[-2:] == "ed" or word[-1] == "s":
				word = choice(words[part])
		elif part == 'noun':
			while word[-1] == 's':
				word = choice(words[part])
			if word[-1] == 'y':
				word = word[:len(word)-1] + 'ie'
			word += "s"
		elif part == 'adverb':
			while word[-2:] != "ly":
				word = choice(words[part])
		s += word + " "
		if is_color:
			s += end_color
	return s


def main():
	args = parse_args(sys.argv)	

	try:
		words = process_word_files()
	except:
		print("can't find the files.")
		exit()

	if args.quantity >= 100000 and not args.yes:
		if input(f'are you sure you want so many? ({args.quantity})\nenter [y] to confirm: ') != 'y':
			exit()

	for i in range(args.quantity):
		print(get_chomsky_sentence(words, args.color))


if __name__ == '__main__':
	main()
